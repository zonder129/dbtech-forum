///**
// * NOTE: This class is auto generated by the server code generator program (2.2.3).
// * https://github.com/swagger-api/swagger-codegen
// * Do not edit the class manually.
// */
//package park.server.api;
//
//import java.math.BigDecimal;
//import park.server.model.Error;
//import park.server.model.Post;
//import park.server.model.PostFull;
//import park.server.model.PostUpdate;
//
//import io.swagger.annotations.*;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.PathVariable;
//import org.springframework.web.bind.annotation.RequestBody;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestMethod;
//import org.springframework.web.bind.annotation.RequestParam;
//
//import java.util.List;
//import javax.validation.Valid;
//
//public interface PostApi {
//
//    @ApiOperation(value = "Получение информации о ветке обсуждения", notes = "Получение информации о ветке обсуждения по его имени. ", response = PostFull.class, tags={  })
//    @ApiResponses(value = {
//        @ApiResponse(code = 200, message = "Информация о ветке обсуждения. ", response = PostFull.class),
//        @ApiResponse(code = 404, message = "Ветка обсуждения отсутсвует в форуме. ", response = Error.class) })
//
//    @RequestMapping(value = "/post/{id}/details",
//        produces = { "application/json" },
//        consumes = { "application/json" },
//        method = RequestMethod.GET)
//    ResponseEntity<PostFull> postGetOne(@ApiParam(value = "Идентификатор сообщения.",required=true ) @PathVariable("id") BigDecimal id,@ApiParam(value = "Включение полной информации о соответвующем объекте сообщения.  Если тип объекта не указан, то полная информация об этих объектах не передаётся. ", allowableValues = "user, forum, thread") @RequestParam(value = "related", required = false) List<String> related);
//
//
//    @ApiOperation(value = "Изменение сообщения", notes = "Изменение сообщения на форуме.  Если сообщение поменяло текст, то оно должно получить отметку `isEdited`. ", response = Post.class, tags={  })
//    @ApiResponses(value = {
//        @ApiResponse(code = 200, message = "Информация о сообщении. ", response = Post.class),
//        @ApiResponse(code = 404, message = "Сообщение отсутсвует в форуме. ", response = Error.class) })
//
//    @RequestMapping(value = "/post/{id}/details",
//        produces = { "application/json" },
//        consumes = { "application/json" },
//        method = RequestMethod.POST)
//    ResponseEntity<Post> postUpdate(@ApiParam(value = "Идентификатор сообщения.",required=true ) @PathVariable("id") BigDecimal id,@ApiParam(value = "Изменения сообщения." ,required=true )  @Valid @RequestBody PostUpdate post);
//
//}
